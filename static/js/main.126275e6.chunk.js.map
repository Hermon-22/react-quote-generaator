{"version":3,"sources":["components/Title.jsx","components/Body.jsx","App.js","reportWebVitals.js","index.js"],"names":["Title","className","Body","props","randomBtn","e","preventDefault","axios","get","then","response","setState","quote","data","state","this","quoteText","quoteAuthor","type","onClick","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAEe,SAASA,IACpB,OACI,qBAAKC,UAAU,QAAf,SACI,mD,qDCwBGC,EA1Bf,kDACI,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAKVC,UAAU,SAACC,GACPA,EAAEC,iBACFC,IAAMC,IAAI,2DACTC,MAAM,SAAAC,GACP,EAAKC,SAAS,CACVC,MAAMF,EAASG,KAAKA,KAAK,SAT7B,EAAKC,MAAM,CACPF,MAAO,IAHG,EADtB,0CAgBI,WACI,OACI,gCACI,oBAAIX,UAAU,QAAd,SAAuBc,KAAKD,MAAMF,MAAMI,YACxC,oBAAIf,UAAU,SAAd,SAAwBc,KAAKD,MAAMF,MAAMK,cAAiB,uBAC1D,wBAAQC,KAAK,SAASC,QAASJ,KAAKX,UAAWH,UAAU,iCAAzD,SAA0F,uDArB1G,GAA0BmB,aCUXC,MATf,WACE,OACE,sBAAKpB,UAAU,MAAf,UACE,cAACD,EAAD,IACA,cAAC,EAAD,QCISsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.126275e6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Title() {\r\n    return (\r\n        <div className='title'>\r\n            <h1>Quote Generator</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport class Body extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            quote: ''\r\n        }\r\n    }\r\n    randomBtn=(e)=>{\r\n        e.preventDefault();\r\n        axios.get('https://quote-garden.herokuapp.com/api/v3/quotes/random')\r\n        .then((response=>{\r\n        this.setState({\r\n            quote:response.data.data[0]\r\n        }) \r\n    }))\r\n        }\r\n    render() {        \r\n        return (\r\n            <div>\r\n                <h4 className='quote'>{this.state.quote.quoteText}</h4>\r\n                <h3 className='author'>{this.state.quote.quoteAuthor}</h3><br />\r\n                <button type=\"submit\" onClick={this.randomBtn} className=\"p-3 mb-2 bg-warning text-white\"><b>  New Quote  </b></button>              \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Body\r\n","import './App.css';\nimport Title from './components/Title'\nimport Body from './components/Body'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title />\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}